// Code generated by MockGen. DO NOT EDIT.
// Source: demo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	toddler_go "github.com/xgxw/toddler-go"
	reflect "reflect"
)

// MockDemoService is a mock of DemoService interface
type MockDemoService struct {
	ctrl     *gomock.Controller
	recorder *MockDemoServiceMockRecorder
}

// MockDemoServiceMockRecorder is the mock recorder for MockDemoService
type MockDemoServiceMockRecorder struct {
	mock *MockDemoService
}

// NewMockDemoService creates a new mock instance
func NewMockDemoService(ctrl *gomock.Controller) *MockDemoService {
	mock := &MockDemoService{ctrl: ctrl}
	mock.recorder = &MockDemoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDemoService) EXPECT() *MockDemoServiceMockRecorder {
	return m.recorder
}

// DoSomething mocks base method
func (m *MockDemoService) DoSomething(arg0 *toddler_go.Request) (*toddler_go.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoSomething", arg0)
	ret0, _ := ret[0].(*toddler_go.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DoSomething indicates an expected call of DoSomething
func (mr *MockDemoServiceMockRecorder) DoSomething(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSomething", reflect.TypeOf((*MockDemoService)(nil).DoSomething), arg0)
}
