// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demo.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Amount               uint64   `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{0}
}

func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (m *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(m, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

func (m *CheckRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CheckRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CheckRequest) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type CheckResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckResponse) Reset()         { *m = CheckResponse{} }
func (m *CheckResponse) String() string { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()    {}
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{1}
}

func (m *CheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResponse.Unmarshal(m, b)
}
func (m *CheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResponse.Marshal(b, m, deterministic)
}
func (m *CheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResponse.Merge(m, src)
}
func (m *CheckResponse) XXX_Size() int {
	return xxx_messageInfo_CheckResponse.Size(m)
}
func (m *CheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResponse proto.InternalMessageInfo

func (m *CheckResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *CheckResponse) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *CheckResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*CheckRequest)(nil), "xgxw.demo.CheckRequest")
	proto.RegisterType((*CheckResponse)(nil), "xgxw.demo.CheckResponse")
}

func init() { proto.RegisterFile("demo.proto", fileDescriptor_ca53982754088a9d) }

var fileDescriptor_ca53982754088a9d = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4b, 0xc3, 0x30,
	0x1c, 0xc5, 0x6d, 0xd6, 0x15, 0xfb, 0x9d, 0x3f, 0x46, 0x14, 0x2d, 0xbd, 0xac, 0xcc, 0xcb, 0x10,
	0xd6, 0x82, 0x82, 0x07, 0x8f, 0x55, 0x10, 0xaf, 0xf1, 0x22, 0xde, 0xda, 0x26, 0x74, 0xa1, 0x4b,
	0xbf, 0x5d, 0x9b, 0xae, 0xfb, 0x6f, 0x07, 0xfb, 0x4b, 0xa4, 0xe9, 0x18, 0x82, 0xb7, 0xf7, 0x5e,
	0xc2, 0xe7, 0x25, 0x0f, 0x80, 0x0b, 0x85, 0x61, 0x55, 0xa3, 0x46, 0xea, 0xee, 0xf2, 0x5d, 0x17,
	0xf6, 0x81, 0xff, 0x92, 0x4b, 0xbd, 0x6a, 0xd3, 0x30, 0x43, 0x15, 0xa9, 0x4e, 0xea, 0x02, 0xbb,
	0x28, 0xc7, 0xa5, 0xb9, 0xb7, 0xdc, 0x26, 0x6b, 0xc9, 0x13, 0x8d, 0x75, 0x13, 0x9d, 0xe4, 0x80,
	0x98, 0xe7, 0x70, 0xf1, 0xb6, 0x12, 0x59, 0xc1, 0xc4, 0xa6, 0x15, 0x8d, 0xa6, 0x0f, 0x40, 0x24,
	0xf7, 0xac, 0xc0, 0x5a, 0xd8, 0xf1, 0xcd, 0x61, 0x3f, 0xbb, 0x9e, 0x9e, 0x3d, 0x4e, 0x24, 0x0f,
	0x6a, 0xb1, 0x69, 0x65, 0x2d, 0x38, 0x23, 0x92, 0x53, 0x1f, 0xec, 0x32, 0x51, 0xc2, 0x23, 0x81,
	0xb5, 0x70, 0x63, 0xe7, 0xb0, 0x9f, 0x91, 0x6f, 0x8b, 0x99, 0x8c, 0xde, 0x81, 0x93, 0x28, 0x6c,
	0x4b, 0xed, 0x8d, 0x7a, 0x08, 0x3b, 0xba, 0xf9, 0x07, 0x5c, 0x1e, 0x8b, 0x9a, 0x0a, 0xcb, 0x46,
	0xd0, 0x2b, 0x20, 0x58, 0x98, 0xa6, 0x73, 0x46, 0xb0, 0xa0, 0xb7, 0x30, 0x5e, 0x4b, 0x25, 0xb5,
	0xa1, 0xda, 0x6c, 0x30, 0x74, 0x0a, 0x23, 0xd5, 0xe4, 0x86, 0xe5, 0xb2, 0x5e, 0x3e, 0x7d, 0xc2,
	0xe4, 0x5d, 0x28, 0xfc, 0x12, 0xf5, 0x56, 0x66, 0x82, 0xbe, 0xc2, 0xd8, 0x70, 0xe9, 0x7d, 0x78,
	0x5a, 0x23, 0xfc, 0xfb, 0x25, 0xdf, 0xfb, 0x7f, 0x30, 0x3c, 0x21, 0xb6, 0x7f, 0x48, 0x95, 0xa6,
	0x8e, 0x59, 0xe2, 0xf9, 0x37, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x7b, 0x06, 0x9d, 0x5a, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoServiceClient is the client API for DemoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoServiceClient interface {
	Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error)
}

type demoServiceClient struct {
	cc *grpc.ClientConn
}

func NewDemoServiceClient(cc *grpc.ClientConn) DemoServiceClient {
	return &demoServiceClient{cc}
}

func (c *demoServiceClient) Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error) {
	out := new(CheckResponse)
	err := c.cc.Invoke(ctx, "/xgxw.demo.DemoService/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemoServiceServer is the server API for DemoService service.
type DemoServiceServer interface {
	Check(context.Context, *CheckRequest) (*CheckResponse, error)
}

// UnimplementedDemoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDemoServiceServer struct {
}

func (*UnimplementedDemoServiceServer) Check(ctx context.Context, req *CheckRequest) (*CheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}

func RegisterDemoServiceServer(s *grpc.Server, srv DemoServiceServer) {
	s.RegisterService(&_DemoService_serviceDesc, srv)
}

func _DemoService_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xgxw.demo.DemoService/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).Check(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DemoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xgxw.demo.DemoService",
	HandlerType: (*DemoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _DemoService_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demo.proto",
}
